#[derive(Debug)]
enum UsState{
	Alabama,
	Alaska,
}

#[derive(Debug)]
enum Coin{
	Penny,
	Nickel,
	Dime,
	Quarter(UsState),
}

fn value_in_cents(coin: &Coin) -> u32{
	match coin{
		Coin::Penny => {
			println!("Lucky penny!");
			1
		},
		Coin::Nickel => 5,
		Coin::Dime => 10,
		Coin::Quarter(state) => {
			println!("state quarter from {:?}",state);
			25
		},
	}
}

fn main(){
	let penny = Coin::Penny;

	println!("value of penny is {}",value_in_cents(&penny));

	let quarter = Coin::Quarter(UsState::Alaska);

	println!("value of {:?} is {}",&quarter,value_in_cents(&quarter));

	let mut count = 0 ;
	if let Coin::Quarter(state) = quarter {
		println!("State quarter from {:?}",state);
	} else {
		count +=1;
	}

}
