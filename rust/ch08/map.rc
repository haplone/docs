use std::collections::HashMap;

fn main(){
	let mut scores = HashMap::new();

	scores.insert(String::from("blue"),10);
	scores.insert(String::from("red"),50);

	for (k,v) in &scores{
		println!(" key : {}\t value: {}",k,v);
	}

	let teams = vec![String::from("blue"),String::from("yellow")];
	let initial_scores = vec![10,50];
	let scores: HashMap<_,_> = teams.iter().zip(initial_scores.iter()).collect();

	for (k,v) in &scores {
		println!(" 2 key :{} \t value:{}",k,v);
	}

	let text = "hello world wonderful world";
	let mut map = HashMap::new();
	
	for word in text.split_whitespace() {
		let count = map.entry(word).or_insert(10);
		*count +=1 ;
	}
	println!("count is {:?}",map);
}	
