#[derive(Debug)]
struct Rectangle{
	width: u32,
	height: u32,
}

impl Rectangle{
	fn area(&self) -> u32 {
		self.width * self.height
	}
	fn can_hold(&self,other: &Rectangle ) -> bool {
		self.width > other.width && self.height > other.height
	}
	fn square(size: u32) -> Rectangle {
		Rectangle{ width: size, height: size}
	}
}

fn main(){
	let rect = Rectangle{ width: 30,height: 50 };
	
	println!("the area of {:?} is {}",rect,rect.area());

	let rect1 = Rectangle{ width: 30,height: 50};
	let rect2 = Rectangle{ width: 10,height: 40};
	let rect3 = Rectangle{ width: 60,height: 45};
	
	println!("can rect1 hold rect2 ? {}",rect1.can_hold(&rect2));
	println!("can rect1 hold rect3 ? {}",rect1.can_hold(&rect3));	
}
